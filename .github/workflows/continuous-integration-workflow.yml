name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 1 * * FRI'

jobs:
  CI:
    continue-on-error: ${{ matrix.config.continue-on-error == 'true' }}
    strategy:
      matrix:
        config:
          - {dockerfile: 'fedora',   tag: 'gmxpkg'}
          - {dockerfile: 'fedora',   tag: 'rawhide',      build_args: "TAG=rawhide\nPYTHON=python3.11", continue-on-error: 'true'}
          - {dockerfile: 'ubuntu',   tag: 'latest'}
          - {dockerfile: 'ubuntu',   tag: 'rolling',      build_args: 'TAG=rolling'}
          - {dockerfile: 'ubuntu',   tag: 'devel',        build_args: 'TAG=devel', continue-on-error: 'true'}
          - {dockerfile: 'opensuse', tag: 'latest',       continue-on-error: 'true'}
          - {dockerfile: 'fedora',   tag: 'latest',       build_args: "GMX_BRANCH=release-2019\nGMX_DOUBLE=ON"}
          - {dockerfile: 'fedora',   tag: 'gmx2019',      build_args: 'GMX_BRANCH=release-2019'}
          - {dockerfile: 'fedora',   tag: 'gmx2022_d',    build_args: "GMX_BRANCH=release-2022\nGMX_DOUBLE=ON"}
          - {dockerfile: 'fedora',   tag: 'gmx2022',      build_args: 'GMX_BRANCH=release-2022'}
          - {dockerfile: 'fedora',   tag: 'gmx9999_d',    build_args: "GMX_BRANCH=main\nGMX_DOUBLE=ON", continue-on-error: 'true'}
          - {dockerfile: 'fedora',   tag: 'gmx9999',      build_args: 'GMX_BRANCH=main', continue-on-error: 'true'}
          - {dockerfile: 'fedora',   tag: 'nogmx',        build_args: 'GMX_BRANCH=none'}
          - {dockerfile: 'fedora',   tag: 'intel',        build_args: 'INTEL=yes'}
          - {dockerfile: 'actions',  tag: 'latest'}
          - {dockerfile: 'format',   tag: 'latest'}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout out code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Gitlab Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
          password: ${{ secrets.GITLAB_REGISTRY_TOKEN }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker images for all Container Registries
        uses: docker/build-push-action@v3        
        with:
          tags: |
            registry.gitlab.com/votca/buildenv/${{ matrix.config.dockerfile }}:${{ matrix.config.tag }}
            ghcr.io/votca/buildenv/${{ matrix.config.dockerfile }}:${{ matrix.config.tag }}
          file: ${{ matrix.config.dockerfile }}
          build-args: ${{ matrix.config.build_args }}
          pull: true
          push: ${{ github.event_name == 'push' ||  github.event_name == 'schedule' }}
